@model MCT.Web.Models.InteractionSimpleModel

@{
    string title = "";

    if (Model.Id > 0)
    {
        title = "Bearbeite Interaktion (" + @Model.Id + ")";
    }
    else
    {
        title = "Neue Interaktion";
    }

    string message = "";
    bool success = false;
    List<string> predicates = new List<string>();

    if (ViewData["Status"] != null)
    {

        message = ViewData["Status"].ToString();

        if (message == "gespeichert")
        {
            success = true;
        }

        if (Session["ALL_PREDICATES"] != null)
        {
            predicates = Session["ALL_PREDICATES"] as List<string>;
        }
    }
}

    @using (@Html.BeginForm("Save", "Interaction"))
    {
        <div class="row panel-default">
            <div class="panel-heading">
                <h3>@title </h3>
            </div>

            @if (ViewData["Status"] != null)
            {
                if (success == true)
                {
                    <div class="alert alert-success">
                        <strong>Interaction</strong> wurde Erfolgreich gespreichert.
                    </div>
                }
                else
                {
                    <div class="alert alert-danger">
                        <strong>Fehler!</strong> @message
                    </div>
                }
            }

            @Html.HiddenFor(m => m.Id)

            <div class="content col-md-8 panel-body">

                <div class="form-group row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control mct-ac-subjects" } })
                    </div>
                    <div class="col-md-4">
                        @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Predicate, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.Predicate, new SelectList(predicates), new { @class = "form-control mct-ac-predicates" })
                    </div>
                    <div class="col-md-4">
                        @Html.ValidationMessageFor(model => model.Predicate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Object, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Object, new { htmlAttributes = new { @class = "form-control mct-ac-subjects" } })
                    </div>
                    <div class="col-md-4">
                        @Html.ValidationMessageFor(model => model.Object, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.ImpactSubject, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.ImpactSubject, new { htmlAttributes = new { @class = "form-control mct-ac-subjects" } })
                    </div>
                    <div class="col-md-4">
                        @Html.ValidationMessageFor(model => model.ImpactSubject, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Indicator, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Indicator, new { htmlAttributes = new { @class = "form-control " } })
                    </div>
                    <div class="col-md-4">
                        @Html.ValidationMessageFor(model => model.Indicator, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <button type="submit" class="btn btn-primary">save</button>

        <button type="button" class="btn btn-default">@Html.ActionLink("Neue Interaktion erstellen", "Edit", "Interaction")</button>
        <button type="button" class="btn btn-default">@Html.ActionLink("Alle Interaktionen", "ShowInteractions", "Interaction")</button>
        <button type="button" class="btn btn-default">@Html.ActionLink("Create Plant", "CreatePlant", "Subject")</button>
        <button type="button" class="btn btn-default">@Html.ActionLink("Create Animal", "CreateAnimal", "Subject")</button>

    }

    <script>
        $(document).ready(function () {

            $.get("/Interaction/GetAllPredicates",
                function (response) {

                    console.log(response);
                    $(".mct-ac-predicates")
                        .autocomplete({
                            source: response
                        });
                },
                "json"
            );

            //ac = autocomplete
            $.get("/Interaction/GetAllSubjects",
                function (response) {

                    console.log(response);

                    $(".mct-ac-subjects")
                        .autocomplete({
                            source: response
                        });
                },
                "json"
            );

        })
    </script>