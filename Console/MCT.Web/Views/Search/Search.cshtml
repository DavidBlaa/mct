@{
    ViewBag.Title = "Search";
}
@model MCT.Web.Models.Search.SearchModel

<h2>Search</h2>

<input type="search" id="searchInput" class=" form-control" placeholder="search...">
<br />
<div class="button-group js-radio-button-group">
    <button class="btn btn-primary" onclick="OnClick(this)">Animal</button>
    <button class="btn btn-primary" onclick="OnClick(this)">Effect</button>
    <button class="btn btn-primary" onclick="OnClick(this)">Plant</button>
    <button class="btn btn-primary" onclick="OnClick(this)">All</button>
    
</div>
<br />

<div id="SearchContent">

    @foreach (var subject in Model.Subjects)
    {
        @Html.Partial("_subjectPartialView", subject);
    }

</div>

<script type="text/javascript">

        var $container = $('#SearchContent');
        // init
        $container.isotope({
            // options
            itemSelector: '.item',
            //layoutMode: 'fitRows'
            layoutMode: 'masonry',
        });

        function OnClick(e)
        {
        
            var selectedType = e.innerText;

            $container.isotope({
                // filter element with numbers greater than 50
                filter: function () {
                    // `this` is the item element. Get text of element's .number
                    var type = $(this).find('.type').text();

                    // return true or false
                    if (selectedType == "All")
                        return true;

                    if (type == selectedType) {

                        //$(this).find('.details').removeAttr( "hidden" )
                        return true;
                    } 
                    
                    else {

                        //$(this).find('.details').attr("hidden", "hidden");
                        return false;
                    }



                }
            })
        }

        $("#searchInput").change(function search(e) {

            var searchInput = e.currentTarget.value;

            $container.isotope({
                // filter element with numbers greater than 50
                filter: function () {
                    // `this` is the item element. Get text of element's .number
                    var name = $(this).find('.name').text();

                    if (name.toLowerCase().indexOf(searchInput.toLowerCase()) >= 0)
                        return true;
                    else
                        return false;
                }
            })
        });


        $(function () {

            $container.on('click', '.item', function () {
                // change size of item by toggling gigante class
                $(this).toggleClass('gigante');
                $container.isotope('layout');

            });

        });

</script>
