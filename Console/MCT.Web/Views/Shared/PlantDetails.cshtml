@using MCT.DB.Entities
@using MCT.Web.Models
@model MCT.Web.Models.PlantModel
@{
    ViewBag.Title = Model.Type.ToString();

}
<div id="plant">

    @Html.Partial("NodeDetails", Model as NodeModel)

    <div class="row panel-default panel-info">
        <div class="panel-heading">
            <h3>Anbau Informationen <span class="containerSwitch fa fa-angle-double-up"></span></h3>

        </div>

        <div class="content col-md-8 panel-body">
            <div class="form-group row">
                @Html.LabelFor(model => model.Width, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Width, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Height, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.Height, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.RootDepth, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.RootDepth, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.NutrientClaim, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.NutrientClaim, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.LocationType, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.LocationType, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.SowingDepth, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.SowingDepth, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
        </div>
    </div>

    @*Dates*@

    <div class="row panel-default">
        <div class="panel-heading">
            <h3>Termine <span class="containerSwitch fa fa-angle-double-up"></span> </h3>
        </div>

        <div class="content panel-body">
            @if (Model.LifeCycles.Any())
            {
                <div id="ganttTermine"></div>
            }
        </div>
    </div>

    <div class="row panel-default">
        <div class="panel-heading">
            <h3>Vorkultur <span class="containerSwitch fa fa-angle-double-up"></span></h3>
        </div>
        <div class="preculture content panel-body">
            @Html.DisplayFor(model => model.PreCultures)
        </div>
    </div>

    <div class="row panel-default">
        <div class="panel-heading">
            <h3>Nachkultur<span class="containerSwitch fa fa-angle-double-up"></span></h3>
        </div>
        <div class="afterculture content panel-body">
            @Html.DisplayFor(model => model.AfterCultures)
        </div>
    </div>

    <p>
        @Html.ActionLink("Back to List", "Search", "Search")

    </p>

</div>


<script type="text/javascript">
            $(document).ready(function () {



                //load gantt
                var url = '@Url.Action("GetEventsForGantt", "Subject", new {id = @Model.Id})';

                $.post(url,
                    function (data) {

                        console.log(data);

                        $("#ganttTermine").gantt({
                            source: data,
                            scale: "weeks",
                            minScale: "weeks",
                            maxScale: "months",
                            itemsPerPage: 50,
                            navigate: "scroll",
                            months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                            onItemClick: function (data) {
                                alert("Item clicked - show some details");
                            },
                            onAddClick: function (dt, rowId) {
                                alert("Empty space clicked - add an item!");
                            },
                            onRender: function () {
                                console.log("chart rendered");
                            }
                        });


                        //$(".content")
                        //    .each(function () {
                        //        $(this).toggle();
                        //    });
                    });
            })

</script>