@model MCT.Web.Models.PlantModel
@{
    ViewBag.Title = "Plant";
}
<div id="plant">
<div id="DetailsHeader" class="jumbotron">

    <h2>@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control mct-ac-subjects" } })</h2>
    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

    <h3>@Html.EditorFor(model => model.ScientificName, new { htmlAttributes = new { @class = "form-control mct-ac-scientificnames" } })</h3>
    @Html.ValidationMessageFor(model => model.ScientificName, "", new { @class = "text-danger" })

    @Html.EnumDropDownListFor(model => model.TaxonRank, new { @class = "form-control dropdown" })
    @Html.ValidationMessageFor(model => model.TaxonRank, "", new { @class = "text-danger" })

</div>
<div id="DetailsContent" class="row">
    <div id="Image" class="col-md-4">
        <img src="@Model.ImagePath" class="speciesImage img-responsive " />
    </div>
    <div class="col-md-8">
        <div id="DescriptionContainer">
            <h4>Beschreibung</h4>
  
                @Html.TextAreaFor(model => model.Description, new {@class="form-control"})
        </div>

        @*<div id="TaxonRanks" class="col-md-12">
            <h4>Taxon</h4>
            @if (Model.Parent != null)
            {
                @Html.Partial("_taxonRankPartialView", Model.Parent)
            }
        </div>*@
    </div>
</div>
<div class="row">
    <div class="col-md-8">

        <h4>Details</h4>

        <div class="form-group">
            @Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control mct-ac-subjects" } })
                @Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control mct-ac-subjects" } })
                @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RootDepth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.RootDepth, new {  @class = "form-control dropdown" })
                @Html.ValidationMessageFor(model => model.RootDepth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NutrientClaim, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.NutrientClaim, new { @class = "form-control dropdown"  })
                @Html.ValidationMessageFor(model => model.NutrientClaim, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SowingDepth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SowingDepth, new { htmlAttributes = new { @class = "form-control mct-ac-subjects" } })
                @Html.ValidationMessageFor(model => model.SowingDepth, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>

<div class="row">
    <h4>Termine</h4>

            @Html.DisplayNameFor(model => model.Bloom)
            @Html.EditorFor(model => model.Bloom)
            @Html.DisplayNameFor(model => model.Sowing)
            @Html.EditorFor(model => model.Sowing)
            @Html.DisplayNameFor(model => model.Harvest)
            @Html.EditorFor(model => model.Harvest)
            @Html.DisplayNameFor(model => model.SeedMaturity)
            @Html.EditorFor(model => model.SeedMaturity)


</div>

<div class="row">
    <h4>Vorkultur</h4>

    @foreach (var p in Model.PreCultures)
    {
        @Html.ActionLink(p.Name, "Details","Search", new { id = p.Id, type = p.Type })<br />

    }

    @Html.EditorFor(model => model.PreCultures)

    <h4>Nachkultur</h4>

    @foreach (var p in Model.AfterCultures)
    {
        @Html.ActionLink(p.Name, "Details", "Search", new { id = p.Id, type = p.Type })<br />
    }

    @Html.EditorFor(model => model.AfterCultures)

</div>

@if (Model.Interactions != null)
{
    @*@Html.Partial("_interactionsOverViewPartialView", model: Model.Interactions);*@
    @Html.EditorFor(model=>model.Interactions)
}


<p>
    <button class="fa fa-save" onclick="savePlant()"></button>

    @*@Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |*@
    @Html.ActionLink("Back to List", "Search")
</p>

    <script type="text/javascript">

    

    function savePlant() {
        var plant = {
            Name: $("#plant #Name").val(),
            ScientificName: $("#plant #ScientificName").val(),
            TaxonRank: $("#plant #TaxonRank").val(),
            Description: $("#plant #Description").val(),
            Width: $("#plant #Width").val(),
            Height: $("#plant #Height").val(),
            RootDepth: $("#plant #RootDepth").val(),
            NutrientClaim: $("#plant #NutrientClaim").val(),
            SowingDepth: $("#plant #SowingDepth").val(),
        }

        console.log(plant);

        $.ajax({
            type: "POST",
            url: "/Search/SavePlant",
            data: plant,
            dataType: "json",
            success: function (response) {

            }
        });
    }

    $(document).ready(function () {

        //readPlant();

        //ac = autocomplete
        $.get("/Search/GetAllSubjects",
            function (response) {

                $(".mct-ac-subjects").autocomplete({
                    source: response
                });
            },
            "json"
        );

        $.get("/Search/GetAllScientificNamesResult",
            function (response) {

                $(".mct-ac-scientificnames").autocomplete({
                    source: response
                });
            },
            "json"
        );

        $.get("/Search/GetAllPredicates",
            function (response) {

                $(".mct-ac-predicates").autocomplete({
                    source: response
                });
            },
            "json"
        );
    })

</script>

<style type="text/css">
    .row {
        margin-bottom: 20px;
    }

    .speciesImage {
        width: 390px;
        height: 390px;
        text-align: center;
    }
</style>
</div>