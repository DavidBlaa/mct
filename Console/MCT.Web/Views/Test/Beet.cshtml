@model MCT.Web.Models.Test.BeetModel


<h1>Beet</h1>
<button id="loadPflanze">neue Pflanze </button>
<button id="plus">zoom in </button>
<button id="minus">zoom out </button>
<div id="divContainer" width="1000" height="600" style="overflow:hidden">
    <svg id="x" width="2000" height="1200" enable-background="true" style="border:1px,solid">
        @foreach (var p in Model.Pflanzen)
        {
            @Html.Partial("Pflanze", p);
        }

    </svg>
</div>
<div id="xmltest"></div>


<style type="text/css">
    #RectTextTest {
        cursor: move;
    }
</style>

@section scripts{
    <script type="text/javascript">

        $("#plus").click(function () {

            zoom(Snap("#x"), 0.1);

        })

        $("#minus").click(function () {
            zoom(Snap("#x"), - 0.1);
        })

        function zoom(svgObj, directionValue)
        {
            var s = svgObj;

            var scaleX = s.transform().localMatrix.a + directionValue;
            var scaleY = s.transform().localMatrix.d + directionValue;



            var x = s.transform().localMatrix.e;
            var y = s.transform().localMatrix.f;

            if (scaleX > 1 || scaleY > 1) s.drag();
            else {
                s.undrag();
                x = 0;
                y = 0;

            }

            s.attr({
                transform: "martix(" + scaleX + "," + s.transform().localMatrix.b + "," + s.transform().localMatrix.c + "," + scaleY + "," + x + "," + y + ")"
            })

            var newTransform = s.transform().localMatrix;
            console.log("nT: " + newTransform);

        }

        $("#loadPflanze").click(function () {

            $.get("/Test/Pflanze", {},
                function (data, textStatus, jqXHR) {

                    var s = Snap("#x");
                    var fragement = Snap.parse(data);
                    console.log(fragement);
                    var x = s.append(fragement);

                    var all = s.selectAll(".pflanze");
                    console.log(all);
                    var last = all[all.length - 1];
                    setDrag(last);
                }
            );
        })

        var s = Snap("#x");
       
        // grid size
        var gridsize = 20;

        var width = $("#x").attr("width");
        var height = $("#x").attr("height");
        drawLines(s, width, height, gridsize)


        var testObjs = s.selectAll(".pflanze");

        $.each(testObjs, function (index, value) {
            //alert("each");
            setDrag(value);
        });

        function setDrag(obj) {

            var move = function (dx, dy) {

                var paperScaleX = this.paper.transform().localMatrix.a;
                var paperScaleY = this.paper.transform().localMatrix.d;

                this.attr({
                    transform: this.data('origTransform') + (this.data('origTransform') ? "T" : "t") + [dx / paperScaleX, dy / paperScaleY]
                });




                // set pre rectangle
                var x = this.transform().localMatrix.e;
                var y = this.transform().localMatrix.f;
                var xSnap = Snap.snapTo(gridsize, x, 100000);
                var ySnap = Snap.snapTo(gridsize, y, 100000);
                console.log("x:" + x + " y:" + y);
                //console.log("dx:" + dx + " dy:" + dy);
                console.log("SnapX:"+xSnap+" SnapY:"+ ySnap);


                var s = getSnap();
                var tmp = s.select("#dropzone");
                tmp.attr({
                    stroke: "#eee",
                    strokeWidth: 1,
                    fill: "#eee",
                    })
                tmp.transform("t" + xSnap + "," + ySnap);
                        

                console.log("-----------------------------");
                console.log(this.transform().localMatrix);
                console.log(tmp.transform().localMatrix);

            }

            var start = function () {
                console.log("start drag");
                this.paper.undrag();
                this.data('origTransform', this.transform().local);

                createTmpRec(this);

            }

            var stop = function (e) {

                var x = this.transform().localMatrix.e;
                var y = this.transform().localMatrix.f;


                var xSnap = Snap.snapTo(gridsize, x , 100000);
                var ySnap = Snap.snapTo(gridsize, y , 100000);

                this.attr({
                    transform: "martix(1,0,0,1," + xSnap + "," + ySnap + ")"
                })

                console.log(this.transform().localMatrix.e + 'x' + this.transform().localMatrix.f);
                this.paper.drag();

                //remove tmp rectangle
                var tmp = getSnap().select("#dropzone");
                tmp.remove();

            }

            obj.drag(move, start, stop);

        }

        function drawLines(s, maxX, maxY, gridSize) {
            var group = s.g();

            // draw x
            for (var i = 0, l = parseInt(maxX / gridSize) + 1; i < l; i++) {
                var x = gridSize * i;

                var line = s.line(x, 0, x, maxY);
                line.attr({
                    stroke: "#eee",
                    strokeWidth: 1
                })
                group.add(line);
            }
            console.log(parseInt(maxY / gridSize));
            for (var i = 0, l = parseInt(maxY / gridSize) + 1; i < l; i++) {
                var y = gridSize * i;

                var line = s.line(0, y, maxX, y);
                line.attr({
                    stroke: "#eee",
                    strokeWidth: 1
                })

                group.add(line);

            }
            //console.log(maxY);
            //console.log(parseInt(maxY / gridSize));
            //console.log(maxX);
            //console.log(parseInt(maxX / gridSize));
            group.attr({ id: "raster" })
            s.prepend(group);


        }


        function createTmpRec(obj)
        {
            //var x = obj.transform().localMatrix.e;
            //var y = obj.transform().localMatrix.f;
            console.log(obj);

            var o = obj.select("#r");
            console.log(o);

            var width = o.attr("width");
            var height = o.attr("height");

            var s = getSnap();

            var tmp = s.rect(0, 0, width, height).attr({
                id:"dropzone"
            })

            s.prepend(tmp);

        }


        function getSnap()
        {
            return Snap("#x");
        }
    </script>
}