@{
    ViewBag.Title = "Search";
}

@model MCT.Web.Models.Search.SearchModel


<h2>Search</h2>
<table id="SearchHeaderTable">
    <tr>
        <td>
            <div class="input-group">
                <input type="search" id="searchInput" class="form-control mct-ac-all" placeholder="search..."/></input>
                <span class="input-group-addon">
                      <i class="fa fa-search"></i>
                </span>
            </div>
        </td>
        <td>
            Filter an/aus
        </td>
        <td>
            <input id="filterOptions" name="Filter on/off" type="checkbox" value="false" onclick="filterOptionsOnClick()" >
        </td>
        <td>
            @Html.ActionLink("Alle Anzeigen", "Search", "Search", new { @class = "btn btn-default" })
        </td>
        <td>
            @if(Model !=null && Model.Species !=null)
            {
                <text>
                Alle Species: @Model.Species.Count
                </text>
            }
        </td>
    </tr>
</table>

<div id="searchBreadcrumb">
    @Html.Partial("_searchBreadcrumb", new Dictionary<string, string>())
</div>

<div id="filter" style="display: none;">
    @Html.Partial("_searchFilterPartialView", Model.Filter)
</div>
<div id="searchResult">
    @Html.Partial("_searchResult", Model.Species.ToList())
</div>

<script type="text/javascript">

    $(document)
        .ready(function() {

            //ac = autocomplete
            $.get("/Search/GetAllNames",
                function(response) {

                    $(".mct-ac-all")
                        .autocomplete({
                            source: response
                        });
                },
                "json"
            );

        });

    var timer = null
    $("#searchInput").keyup(function(e) {

        if (timer!=null)
        {
            clearTimeout(timer);
            timer = null;
        }

        timer = setTimeout(search(), 2000);
    });

    $("#searchInput").change(function (e) {
        //search();
    });

    function search()
    {
        console.log("search starting")
        var searchValue = $("#searchInput").val();
        $("#searchInput").attr("disabled");
        //alert(searchValue)
        $.post('@Url.Action("Search", "Search")', { searchValue: searchValue }, function (response) {

            $("#searchResultContent").replaceWith(response);
            $("#searchInput").removeAttr("disabled");
            UpdateBreadcrumb();
        });
    }

    function UpdateSearch() {

        $.post('@Url.Action("UpdateSearch", "Search")', function(response) {

            $("#searchResultContent").replaceWith(response);

        });

    }

    function UpdateBreadcrumb() {

        $.post('@Url.Action("UpdateBreadcrumb", "Search")', function (response) {

            $("#searchBreadcrumbContent").replaceWith(response);

        });

    }

    function ClearSearchInput() {
        $('#searchInput').empty();
    }

    function filterOptionsOnClick() {
        $('#filter').toggle();
    }

</script>