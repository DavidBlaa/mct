@using MCT.DB.Entities
@model MCT.Web.Models.PlantModel
@{
    ViewBag.Title = "Plant";
}
<div id="plant">
    <div id="DetailsHeader" class="jumbotron">
        @Html.ActionLink(" ", "Edit", new { id = Model.Id, type = @Model.Type.ToString() }, new {@class="fa fa-pencil" })
        @Html.HiddenFor(m => m.Id)
        <a class="fa fa-trash icon" onclick="deleteSubject(@Model.Id)"></a>
        <h2>
            @Html.DisplayFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        </h2>
    <h3>@Html.DisplayFor(model => model.ScientificName, new { htmlAttributes = new { @class = "form-control" } })</h3>
    @Html.DisplayFor(model => model.TaxonRank, new { @class = "form-control"})
</div>

<div id="DetailsContent" class="row">
    <div id="Image" class="col-md-4">
        <img src="@Model.ImagePath" class="speciesImage img-responsive " />
    </div>
    <div class="col-md-8">
        <div id="DescriptionContainer">
            <h4>Beschreibung</h4>

            @Html.DisplayFor(model => model.Description, new { @class = "form-control" })
        </div>

        @*<div id="TaxonRanks" class="col-md-12">
                <h4>Taxon</h4>
                @if (Model.Parent != null)
                {
                    @Html.Partial("_taxonRankPartialView", Model.Parent)
                }
            </div>*@
    </div>
</div>
<div class="row">
    <div class="col-md-8">

        <h4>Anbau Informationen</h4>

        <div class="form-group">
            @Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Height, new { htmlAttributes = new { @class = "form-control mct-ac-subjects" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RootDepth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RootDepth, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NutrientClaim, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.NutrientClaim, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SowingDepth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.SowingDepth, new { htmlAttributes = new { @class = "form-control mct-ac-subjects" } })
                @Html.ValidationMessageFor(model => model.SowingDepth, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>

<div class="row">
    <h4>Termine</h4>

    @Html.DisplayNameFor(model => model.Bloom)
    @Html.DisplayFor(model => model.Bloom)
    @Html.DisplayNameFor(model => model.Sowing)
    @Html.DisplayFor(model => model.Sowing)
    @Html.DisplayNameFor(model => model.Harvest)
    @Html.DisplayFor(model => model.Harvest)
    @Html.DisplayNameFor(model => model.SeedMaturity)
    @Html.DisplayFor(model => model.SeedMaturity)


</div>

<div class="row">

    <h4>Vorkultur</h4>
    <div class="preculture">
        @Html.DisplayFor(model => model.PreCultures)
    </div>

    <div class="afterculture">
        <h4>Nachkultur</h4>

        @Html.DisplayFor(model => model.AfterCultures)
    </div>
</div>

@if (Model.Interactions != null)
{
    @*@Html.Partial("_interactionsOverViewPartialView", model: Model.Interactions);*@
    @Html.DisplayFor(model => model.Interactions)
}


<p>
    @*<button class="fa fa-save" onclick="savePlant()"></button>*@

    @*@Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |*@
    @Html.ActionLink("Back to List", "Search")
</p>

<script type="text/javascript">
    $(document).ready(function () {

        //convert interactions table to a cool table
        $('#example').DataTable();

        //ac = autocomplete
        $.get("/Search/GetAllSubjects",
            function (response) {

                $(".mct-ac-subjects").autocomplete({
                    source: response
                });
            },
            "json"
        );

        $.get("/Search/GetAllScientificNamesResult",
            function (response) {

                $(".mct-ac-scientificnames").autocomplete({
                    source: response
                });
            },
            "json"
        );

        $.get("/Search/GetAllPredicates",
            function (response) {

                $(".mct-ac-predicates").autocomplete({
                    source: response
                });
            },
            "json"
        );
    })

</script>

<style type="text/css">
    .row {
        margin-bottom: 20px;
    }

    .speciesImage {
        width: 390px;
        height: 390px;
        text-align: center;
    }
</style>
</div>